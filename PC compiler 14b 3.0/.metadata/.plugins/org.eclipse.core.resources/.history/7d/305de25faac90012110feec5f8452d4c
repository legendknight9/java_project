package gui;

import java.awt.BorderLayout;
import java.awt.EventQueue;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.BoxLayout;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.JCheckBox;

import util.RelativeLayout;
import util.UICreator;
import java.awt.Rectangle;

public class test extends JFrame {

	private JPanel contentPane;
	private JTextField projectPathTF;
	private JFrame thisFrame;
	private Rectangle r[];

	/**
	 * Create the frame.
	 */
	public test() {
		thisFrame = this;
		r = new Rectangle[6];
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 480, 490);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JPanel row1 = new JPanel();
		row1.setBounds(new Rectangle(10, 10, 440, 30));
		r[0] = row1.getBounds();
		contentPane.add(row1);
		row1.setLayout(new RelativeLayout(RelativeLayout.X_AXIS, 10));
		
		JLabel lblProjectPath = new JLabel("Project path");
		row1.add(lblProjectPath, new Float(1));	
		projectPathTF = new JTextField();
		row1.add(projectPathTF, new Float(3));
		projectPathTF.setColumns(10);	
		final JButton btnBrowse = new JButton("Browse");
		btnBrowse.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				JFileChooser fc = new JFileChooser();
				fc.showOpenDialog(btnBrowse);
				projectPathTF.setText(fc.getSelectedFile().getPath());
			}
		});
		row1.add(btnBrowse, new Float(1));
		
		final JPanel row2 = new JPanel();		
		row2.setBounds(new Rectangle(10, 50, 440, 60));
		r[1] = row2.getBounds();
		contentPane.add(row2);
		row2.setLayout(new BoxLayout(row2, BoxLayout.Y_AXIS));
		
		JLabel lblHeaderFiles = new JLabel("Header files");
		row2.add(lblHeaderFiles);		
		final JPanel headerFiles = new JPanel();
		row2.add(headerFiles);
		headerFiles.setLayout(new BoxLayout(headerFiles, BoxLayout.Y_AXIS));		
		final JButton btnAddHFile = new JButton("Add file");
		btnAddHFile.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				JFileChooser fc = new JFileChooser();
				fc.showOpenDialog(btnAddHFile);
				headerFiles.add(UICreator.createAddFileRow(fc.getSelectedFile().getPath()));
//				Rectangle row2Rec = row2.getBounds();
				reSize(r, 1, 30);

//				((JFrame)contentPane.getParent().getParent().getParent());
//				
//				thisFrame.resize(thisFrame.getWidth(), thisFrame.getHeight() + 30);
			}
		});
		row2.add(btnAddHFile);
		headerFiles.setLayout(new RelativeLayout(RelativeLayout.Y_AXIS, 10));		
		
		JPanel row3 = new JPanel();
		row3.setBounds(new Rectangle(10, 120, 440, 85));
		r[2] = row3.getBounds();
		contentPane.add(row3);
		row3.setLayout(new RelativeLayout(RelativeLayout.Y_AXIS, 10));
		
		JLabel lblSourceFiles = new JLabel("Source files");
		row3.add(lblSourceFiles);		
		final JPanel sourceFiles = new JPanel();
		row3.add(sourceFiles);
		JButton btnAddSFile = new JButton("Add file");
		row3.add(btnAddSFile);
		btnAddSFile.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				JFileChooser fc = new JFileChooser();
				fc.showOpenDialog(btnAddHFile);
				sourceFiles.add(UICreator.createAddFileRow(fc.getSelectedFile().getPath()));
				((JFrame)contentPane.getParent().getParent().getParent()).pack();
			}
		});
		
		JPanel row4 = new JPanel();
		row4.setBounds(new Rectangle(10, 218, 440, 85));
		r[3] = row4.getBounds();
		contentPane.add(row4);
		row4.setLayout(new RelativeLayout(RelativeLayout.Y_AXIS, 10));
		
		JLabel lblLibFiles = new JLabel("Lib files");
		row4.add(lblLibFiles);		
		final JPanel libFiles = new JPanel();
		row4.add(libFiles);
		JButton btnAddLFile = new JButton("Add file");
		row4.add(btnAddLFile);
		btnAddLFile.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				JFileChooser fc = new JFileChooser();
				fc.showOpenDialog(btnAddHFile);
				libFiles.add(UICreator.createAddFileRow(fc.getSelectedFile().getPath()));
				((JFrame)contentPane.getParent().getParent().getParent()).pack();
			}
		});
		
		JPanel row5 = new JPanel();
		row5.setBounds(new Rectangle(10, 316, 440, 85));
		r[4] = row5.getBounds();
		contentPane.add(row5);
		row5.setLayout(new RelativeLayout(RelativeLayout.Y_AXIS, 10));
		
		JLabel lblOtherFiles = new JLabel("Other files");
		row5.add(lblOtherFiles);		
		final JPanel otherFiles = new JPanel();
		row5.add(otherFiles);
		JButton btnAddOFile = new JButton("Add file");
		row5.add(btnAddOFile);
		btnAddOFile.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				JFileChooser fc = new JFileChooser();
				fc.showOpenDialog(btnAddHFile);
				otherFiles.add(UICreator.createAddFileRow(fc.getSelectedFile().getPath()));
				((JFrame)contentPane.getParent().getParent().getParent()).pack();
			}
		});
		
		JPanel row6 = new JPanel();
		row6.setBounds(new Rectangle(10, 412, 440, 30));
		r[5] = row6.getBounds();
		contentPane.add(row6);
		row6.setLayout(new RelativeLayout(RelativeLayout.X_AXIS, 50));	
		
		JButton btnBack = new JButton("Back");
		row6.add(btnBack, new Float(1));
		JButton btnCreate = new JButton("Create folder");
		btnCreate.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				String config[] = {"", "", "", ""};
				mainUI frame = new mainUI(config);
				frame.setVisible(true);
				((JFrame)contentPane.getParent().getParent().getParent()).setVisible(false);
			}
		});
		row6.add(btnCreate, new Float(1));	
		
	}

	protected void reSize(Rectangle[] r, int pos, int offset) {
		thisFrame.resize(thisFrame.getWidth(), thisFrame.getHeight() + 30);
		for (int index = pos + 1; index < r.length; index++) {
			r[index].setLocation((int)r[index].getX(), (int)r[index].getY() + offset);
		}
		r[pos].resize((int)r[pos].getWidth(), (int)r[pos].getHeight() + offset);
		r[pos].setBounds(r[pos]);		
	}
}
